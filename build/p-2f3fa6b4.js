class t{constructor(){this.m=new Map}reset(t){this.m=new Map(Object.entries(t))}get(t,e){const n=this.m.get(t);return void 0!==n?n:e}getBoolean(t,e=!1){const n=this.m.get(t);return void 0===n?e:"string"==typeof n?"true"===n:!!n}getNumber(t,e){const n=parseFloat(this.m.get(t));return isNaN(n)?void 0!==e?e:NaN:n}set(t,e){this.m.set(t,e)}}const e=new t,n=t=>{try{const e=t.sessionStorage.getItem(a);return null!==e?JSON.parse(e):{}}catch(e){return{}}},r=(t,e)=>{try{t.sessionStorage.setItem(a,JSON.stringify(e))}catch(n){return}},s=t=>{const e={};return t.location.search.slice(1).split("&").map((t=>t.split("="))).map((([t,e])=>[decodeURIComponent(t),decodeURIComponent(e)])).filter((([t])=>o(t,c))).map((([t,e])=>[t.slice(c.length),e])).forEach((([t,n])=>{e[t]=n})),e},o=(t,e)=>t.substr(0,e.length)===e,c="anywhere-ui:",a="anywhere-ui-persist-config";export{s as a,e as b,n as c,r as s}